// custom SCSS (or CSS) goes here
.side-bar {
    z-index: 0;
    display: flex;
    flex-wrap: wrap;
    background-color: $sidebar-color;
    box-sizing:content-box;
  
    @include mq(md) {
      flex-flow: column nowrap;
      position: fixed;
      width: 25%;
      height: 100%;
      border-right: $border $border-color;
      align-items: flex-start;
    }
  
    @include mq(lg) {
      width: 25%;
      min-width: $nav-width;
    }
  }
  
  .main {
    @include mq(md) {
      position: relative;
      max-width: 75%;
      margin-left: $nav-width-md;
    }
  
    @include mq(lg) {
      // stylelint-disable function-name-case
      // disable for Max(), we want to use the CSS max() function
      margin-left: 25%;
      // stylelint-enable function-name-case
    }
  }

.site-nav,
.site-header,
.site-footer {
  width: 100%;

  @include mq(lg) {
    width: 100%;
  }
}


.nav-list {
    padding: 0;
    margin-top: 0;
    margin-bottom: 0;
    list-style: none;
    box-sizing: border-box;
  
    .nav-list-item {
      @include fs-6;
  
      position: relative;
      margin: 0;
      box-sizing: border-box;
  
      @include mq(md) {
        @include fs-4;
      }
  
      .nav-list-link {
        display: block;
        min-height: $nav-list-item-height-sm;
        padding-top: $sp-1;
        padding-bottom: $sp-1;
        line-height: #{$nav-list-item-height-sm - 2 * $sp-1};
        @if $nav-list-expander-right {
          padding-right: $nav-list-item-height-sm;
          padding-left: $gutter-spacing-sm;
        } @else {
          padding-right: $gutter-spacing-sm;
          padding-left: $nav-list-item-height-sm;
        }
  
        @include mq(md) {
          min-height: $nav-list-item-height;
          line-height: #{$nav-list-item-height - 2 * $sp-1};
          @if $nav-list-expander-right {
            padding-right: $nav-list-item-height;
            padding-left: $gutter-spacing;
          } @else {
            padding-right: $gutter-spacing;
            padding-left: $nav-list-item-height;
          }
        }
  
        &.external > svg {
          width: $sp-4;
          height: $sp-4;
          vertical-align: text-bottom;
        }
  
        &.active {
          font-weight: 600;
          text-decoration: none;
        }
  
        &:hover,
        &.active {
          background-image: linear-gradient(
            -90deg,
            rgba($feedback-color, 1) 0%,
            rgba($feedback-color, 0.8) 80%,
            rgba($feedback-color, 0) 100%
          );
        }
      }
  
      .nav-list-expander {
        position: absolute;
        box-sizing: border-box;
        @if $nav-list-expander-right {
          right: 0;
        }
  
        width: $nav-list-item-height-sm;
        height: $nav-list-item-height-sm;
        padding: #{$nav-list-item-height-sm * 0.25};
        color: $link-color;
  
        @include mq(md) {
          width: $nav-list-item-height;
          height: $nav-list-item-height;
          padding: #{$nav-list-item-height * 0.25};
        }
  
        &:hover {
          background-image: linear-gradient(
            -90deg,
            rgba($feedback-color, 1) 0%,
            rgba($feedback-color, 0.8) 100%
          );
        }
  
        @if $nav-list-expander-right {
          svg {
            transform: rotate(90deg);
          }
        }
      }
  
      > .nav-list {
        display: none;
        padding-left: $sp-3;
        list-style: none;
  
        .nav-list-item {
          position: relative;
  
          .nav-list-link {
            color: $nav-child-link-color;
          }
  
          .nav-list-expander {
            color: $nav-child-link-color;
          }
        }
      }
  
      &.active {
        > .nav-list-expander svg {
          @if $nav-list-expander-right {
            transform: rotate(-90deg);
          } @else {
            transform: rotate(90deg);
          }
        }
  
        > .nav-list {
          display: block;
        }
      }
    }
  }

.search-input {
    position: absolute;
    width: 100%;
    height: 100%;
    padding: $sp-2 $gutter-spacing-sm $sp-2 #{$gutter-spacing-sm + $sp-5};
    font-size: 1rem;
    color: $body-text-color;
    background-color: $search-background-color;
    border-top: 0;
    border-right: 0;
    border-bottom: 0;
    border-left: 0;
    border-radius: 0;
    box-sizing: border-box;
  
    @include mq(md) {
      padding: $sp-2 $gutter-spacing-sm $sp-2 #{$gutter-spacing + $sp-5};
      font-size: 0.875rem;
      background-color: $body-background-color;
      transition: padding-left linear #{$transition-duration * 0.5};
    }
  
    &:focus {
      outline: 0;
  
      + .search-label .search-icon {
        color: $link-color;
      }
    }
  }


  .site-button {
    display: flex;
    height: 100%;
    padding: $gutter-spacing-sm;
    align-items: center;
    box-sizing: border-box;
  }